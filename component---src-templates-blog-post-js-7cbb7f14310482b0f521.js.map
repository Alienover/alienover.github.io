{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["post","data","markdownRemark","frontmatter","title","css","rhythm","date","timeToRead","tags","map","tag","index","dangerouslySetInnerHTML","__html","html","query"],"mappings":"2FACA,2GAsBe,sBAAsB,IAC7BA,EAD4B,EAAlBC,KACEC,eAClB,OACE,YAAC,IAAD,KACE,YAAC,SAAD,KACE,yBAAQF,EAAKG,YAAYC,QAE3B,uBACE,sBAAKJ,EAAKG,YAAYC,OACtB,mBACEC,IAAKA,YAAF,aACYC,YAAO,IADnB,kCAIaA,YAAO,KAJpB,OAQFN,EAAKG,YAAYI,KAClB,8BAAaP,EAAKQ,WAAlB,aACCR,EAAKG,YAAYM,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACzB,4BAAQD,QAId,mBACEN,IAAKA,YAAF,cACaC,YAAO,GADpB,KAGHO,wBAAyB,CAAEC,OAAQd,EAAKe,UAMzC,IAAMC,EAAK","file":"component---src-templates-blog-post-js-7cbb7f14310482b0f521.js","sourcesContent":["// @flow\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nimport { rhythm } from '../utils/typography'\n\ntype Props = {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string,\n        date: string,\n        tags: $ReadOnlyArray<string>,\n      },\n      html: string,\n      timeToRead: number,\n    },\n  },\n}\nexport default ({ data }: Props) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n      </Helmet>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div\n          css={css`\n            font-size: ${rhythm(1 / 2)};\n            color: gray;\n            && > span {\n              margin: 0 ${rhythm(1 / 4)};\n            }\n          `}\n        >\n          {post.frontmatter.date}\n          <span>{`☕️ ${post.timeToRead} min read`}</span>\n          {post.frontmatter.tags.map((tag, index) => (\n            <span>#{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div\n        css={css`\n          margin-top: ${rhythm(1)};\n        `}\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        tags\n        date(formatString: \"YYYY-MM-DD\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}